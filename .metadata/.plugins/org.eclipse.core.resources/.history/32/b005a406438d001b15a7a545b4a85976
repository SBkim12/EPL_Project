var element = $('.floating-chat');
	var myStorage = localStorage;

	var ws;
	var messages = document.getElementById("messages");
	
	setTimeout(function() {
	    element.addClass('enter');
	}, 1000);
	
	element.click(openSocket);
	
	function openSocket() {
		
		var messages = element.find('.messages');
	    var textInput = element.find('.text-box');
	    element.find('>i').hide();
	    element.addClass('expand');
	    element.find('.chat').addClass('enter');
	    var strLength = textInput.val().length * 2;
	    //textInput.keydown(onMetaAndEnter).prop("disabled", false).focus();
	    element.off('click', openSocket);
	    element.find('.header button').click(closeSocket);
	    element.find('#sendMessage').click(send);
	    messages.scrollTop(messages.prop("scrollHeight"));
		
		if (ws !== undefined && ws.readyState !== WebSocket.CLOSED) {
			writeResponse("WebSocket is already opened.");
			return;
		}
		// 웹소켓 객체 만드는 코드
		ws = new WebSocket("ws://localhost:9005/echo.do");

		ws.onopen = function(event) {
			if (event.data === undefined)
				return;

			writeResponse(event.data);
		};
		ws.onmessage = function(event) {
			writeResponse(event.data);
		};
		ws.onclose = function(event) {
			writeResponse("Connection closed");
		}
	}

	function send() {
		var text = document.getElementById("messageinput").value + ","
				+ document.getElementById("sender").value;
		ws.send(text);
		text = "";
		
		var userInput = $('.text-box');
		
		var messagesContainer = $('.messages');
		
		// clean out old message
	    userInput.html('');
	    // focus on input
	    userInput.focus();
		
		messagesContainer.finish().animate({
	        scrollTop: messagesContainer.prop("scrollHeight")
	    }, 250);
		
	}

	function closeSocket() {
		ws.close();
		element.on('click');
	}
	function writeResponse(text) {
		messages.innerHTML += '<li class="self">' + text + '</li>';
		
		var messagesContainer = $('.messages');
		
		messagesContainer.finish().animate({
	        scrollTop: messagesContainer.prop("scrollHeight")
	    }, 250);
	}